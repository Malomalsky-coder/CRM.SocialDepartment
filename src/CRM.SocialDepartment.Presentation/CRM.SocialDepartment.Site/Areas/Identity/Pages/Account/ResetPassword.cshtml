@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Новый пароль";
    Layout = "_LayoutWithoutContainer";
}

<div class="auth-card">
    <div class="text-center mb-4">
        <i class="fa fa-key fa-3x text-primary mb-3"></i>
        <h1 class="h3 mb-2">Создание нового пароля</h1>
        <p class="text-muted">Введите новый пароль для вашей учетной записи</p>
    </div>

    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>
        <input asp-for="Input.Code" type="hidden" />
        
        <div class="mb-3">
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fa fa-envelope text-secondary"></i>
                </span>
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="Электронная почта" readonly />
            </div>
            <span asp-validation-for="Input.Email" class="invalid-feedback d-block"></span>
        </div>
        
        <div class="mb-3">
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fa fa-lock text-primary"></i>
                </span>
                <input asp-for="Input.Password" class="form-control" type="password" autocomplete="new-password" aria-required="true" placeholder="Новый пароль" />
            </div>
            <span asp-validation-for="Input.Password" class="invalid-feedback d-block"></span>
            <small class="text-muted">Минимум 6 символов</small>
        </div>
        
        <div class="mb-3">
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fa fa-check text-primary"></i>
                </span>
                <input asp-for="Input.ConfirmPassword" class="form-control" type="password" autocomplete="new-password" aria-required="true" placeholder="Подтвердите новый пароль" />
            </div>
            <span asp-validation-for="Input.ConfirmPassword" class="invalid-feedback d-block"></span>
        </div>
        
        <div class="d-grid mb-3">
            <button id="resetPasswordSubmit" type="submit" class="btn btn-primary btn-lg">
                <i class="fa fa-key me-2"></i>Установить новый пароль
            </button>
        </div>
        
        <div class="text-center">
            <a class="text-decoration-none" asp-page="./Login">
                <i class="fa fa-arrow-left me-1"></i>Вернуться к входу
            </a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Добавляем плавную анимацию появления
        document.addEventListener('DOMContentLoaded', function() {
            const authCard = document.querySelector('.auth-card');
            authCard.style.opacity = '0';
            authCard.style.transform = 'translateY(30px)';
            
            setTimeout(() => {
                authCard.style.transition = 'all 0.6s ease-out';
                authCard.style.opacity = '1';
                authCard.style.transform = 'translateY(0)';
            }, 100);
        });

        // Фокус на поле пароля при загрузке
        document.querySelector('input[name="Input.Password"]').focus();
        
        // Валидация совпадения паролей
        const passwordInput = document.querySelector('input[name="Input.Password"]');
        const confirmPasswordInput = document.querySelector('input[name="Input.ConfirmPassword"]');
        
        function validatePasswordMatch() {
            if (confirmPasswordInput.value && passwordInput.value !== confirmPasswordInput.value) {
                confirmPasswordInput.setCustomValidity('Пароли не совпадают');
                confirmPasswordInput.classList.add('is-invalid');
            } else {
                confirmPasswordInput.setCustomValidity('');
                confirmPasswordInput.classList.remove('is-invalid');
                if (confirmPasswordInput.value && passwordInput.value === confirmPasswordInput.value) {
                    confirmPasswordInput.classList.add('is-valid');
                }
            }
        }
        
        passwordInput?.addEventListener('input', validatePasswordMatch);
        confirmPasswordInput?.addEventListener('input', validatePasswordMatch);
        
        // Анимация кнопки при отправке
        document.getElementById('resetPasswordSubmit').addEventListener('click', function() {
            const btn = this;
            const icon = btn.querySelector('i');
            
            // Показываем спиннер
            icon.classList.remove('fa-key');
            icon.classList.add('fa-spinner', 'fa-spin');
            btn.disabled = true;
            
            // Возвращаем обратно через 3 секунды (если форма не отправилась)
            setTimeout(() => {
                icon.classList.remove('fa-spinner', 'fa-spin');
                icon.classList.add('fa-key');
                btn.disabled = false;
            }, 3000);
        });
    </script>
}
